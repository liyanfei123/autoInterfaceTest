<?xml version="1.0" encoding="UTF-8" ?>
<!-- 日志级别从低到高分为 TRACE < DEBUG < INFO < WARN < ERROR < FATAL
如果设置为WARN，则低于WARN到信息都不会输出-->
<!-- scan: 当此属性为设置为true时，配置文件如果发生变化，将会被重新加载，默认为true-->
<!-- scanPeriod: 设置监测配置文件是否有修改的时间间隔，如果没有给出时间单位，默认单位为毫秒。
     当scan为true时，此属性生效，默认时间间隔为1分钟-->
<!-- debug: 当此属性设置为true时，将打印出logback内部日志信息，实时查看logback运行状态，默认为false，通常不打印-->
<configuration scan="true" scanPeriod="10 seconds" debug="false">
    <!--    输出到控制台-->
    <appender name="CONSOLE"
              class="ch.qos.logback.core.ConsoleAppender">
        <!--        此日志appender是为开发使用，只配置最低级别，控制台输出到日志级别是大于或等于此级别到日志到-->
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <level>debug</level>
        </filter>
        <encoder>
            <pattern>
                %date[%-5p] [%thread] %logger{60} [%file : %line] %msg%n
            </pattern>
            <!--设置字符集-->
            <charset>UTF-8</charset>
        </encoder>
    </appender>


    <appender name="FILE"
              class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>/Users/liyanfei/MyCode/autoTest/LogBackAndMyBatis/logback/log/stdout.log</file>
        <encoder>
            <pattern>
                %date[%-5p] [%thread] %logger{60} [%file : %line] %msg%n
            </pattern>
        </encoder>
        <!--滚动策略-->
        <rollingPolicy
                class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!--路径-->
            <fileNamePattern>/Users/liyanfei/MyCode/autoTest/LogBackAndMyBatis/logback/log/logbackError.%d{yyyy-MM-dd}.log</fileNamePattern>
            <maxHistory>30</maxHistory>
        </rollingPolicy>
    </appender>

    <!--    只打印某个包的日志-->
    <logger name="com.liyanfei.mapper" level="DEBUG"/> <!--注意这边为DEBUG-->

    <root level="INFO">  <!--若appender中未添加级别，则以这个为准-->
        <appender-ref ref="CONSOLE"/>
        <!--        <appender-ref ref="FILE"/>-->
    </root>
</configuration>